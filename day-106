1---
2798. Number of Employees Who Met the Target
Solved
Easy
Topics
Companies
Hint
There are n employees in a company, numbered from 0 to n - 1. Each employee i has worked for hours[i] hours in the company.

The company requires each employee to work for at least target hours.

You are given a 0-indexed array of non-negative integers hours of length n and a non-negative integer target.

Return the integer denoting the number of employees who worked at least target hours.

 

Example 1:

Input: hours = [0,1,2,3,4], target = 2
Output: 3
Explanation: The company wants each employee to work for at least 2 hours.
- Employee 0 worked for 0 hours and didn't meet the target.
- Employee 1 worked for 1 hours and didn't meet the target.
- Employee 2 worked for 2 hours and met the target.
- Employee 3 worked for 3 hours and met the target.
- Employee 4 worked for 4 hours and met the target.
There are 3 employees who met the target.


solution
function numberOfEmployeesWhoMetTarget(hours, target) {
    const arr = [];
    hours.map((i) => {
        i >= target ?  arr.push(i) : 'noo' 
    })

    return arr.length
};




----2
2011. Окончательное значение переменной после выполнения операций.
Solved
Легкий
Темы
Компании
Намекать
Существует язык программирования всего с четырьмя операциями и одной переменной X:

++Xи X++ увеличивает значение переменной Xна 1.
--Xи X-- уменьшает значение переменной Xна 1.
Первоначально значение Xравно 0.

Учитывая массив строк ,operations содержащий список операций, верните окончательное значениеX после выполнения всех операций .

 

Пример 1:

Ввод: Operations = ["--X","X++","X++"]
 Вывод: 1
 Объяснение:  Операции выполняются следующим образом:
Первоначально Х = 0.
--X: X уменьшается на 1, X = 0 - 1 = -1.
X++: X увеличивается на 1, X = -1 + 1 = 0.
X++: X увеличивается на 1, X = 0 + 1 = 1.



solution
    function finalValueAfterOperations(operations) {
        let count = 0;
        operations.map((i) => {
            let rr = i.split('')[1];
            if( rr === '+') {
                return count++
            } else {
                return count--
            }
        })

        return count
};
