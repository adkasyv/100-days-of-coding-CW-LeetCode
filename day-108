Given a list of directions to spin, "left" or "right", return an integer of how many full 360° rotations were made. Note that each word in the array counts as a 90° rotation in that direction.

Worked Example
["right", "right", "right", "right", "left", "right"] ➞ 1
# You spun right 4 times (90 * 4 = 360)
# You spun left once (360 - 90 = 270)
# But you spun right once more to make a full rotation (270 + 90 = 360)

function spinAround(directions) {
  let totalRotation = 0;

  for (let direction of directions) {
    if (direction === "right") {
      totalRotation += 90;
    } else if (direction === "left") {
      totalRotation -= 90;
    }
  }

  const fullRotations = Math.floor(Math.abs(totalRotation) / 360);
  return fullRotations;
}

немое решение, ноя старался
  
2---
7 кю
Возведите в квадрат каждую цифру
Добро пожаловать. В этом ката вас просят возвести в квадрат каждую цифру числа и соединить их.

Например, если мы пропустим через функцию 9119, получится 811181, потому что 9 2 равно 81, а 1 2 равно 1. (81-1-1-81)

Пример №2: Ввод 765 вернет/должен вернуть 493625, потому что 7 2 равно 49, 6 2 равно 36, а 5 2 равно 25. (49-36-25)

Примечание. Функция принимает целое число и возвращает целое число.

Приятного кодирования!

function squareDigits(num){
  let sum = []
  let arrSplit = Array.from(String(num));
  arrSplit.map((i) => {
    let square = i * i;
    sum.push(square)
  })

  return Number(sum.join(''))
}

squareDigits(3212)
